{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.1.6"
        }
      },
      "InfraStack": {
        "id": "InfraStack",
        "path": "InfraStack",
        "children": {
          "DocumentBucket": {
            "id": "DocumentBucket",
            "path": "InfraStack/DocumentBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InfraStack/DocumentBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "lambda-async-dev-documents"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.15.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.15.0"
            }
          },
          "SuccessHandler": {
            "id": "SuccessHandler",
            "path": "InfraStack/SuccessHandler",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "InfraStack/SuccessHandler/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfraStack/SuccessHandler/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.15.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "InfraStack/SuccessHandler/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfraStack/SuccessHandler/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "DocumentBucketAE41E5A9",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "DocumentBucketAE41E5A9",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SuccessHandlerServiceRoleDefaultPolicy668974D4",
                            "roles": [
                              {
                                "Ref": "SuccessHandlerServiceRoleEBF509F1"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.15.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.15.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "InfraStack/SuccessHandler/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "InfraStack/SuccessHandler/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.15.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "InfraStack/SuccessHandler/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.15.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfraStack/SuccessHandler/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "58e7a7e0d13dc496cc950cfcd15fa2e8d66ae5fbb11e2367e449753c92197460.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SuccessHandlerServiceRoleEBF509F1",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "S3_BUCKET_NAME": {
                          "Ref": "DocumentBucketAE41E5A9"
                        }
                      }
                    },
                    "functionName": "lambda-async-dev-onsuccess",
                    "handler": "main.handler",
                    "runtime": "python3.8"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.15.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.15.0"
            }
          },
          "LambdaAsyncFunction": {
            "id": "LambdaAsyncFunction",
            "path": "InfraStack/LambdaAsyncFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "InfraStack/LambdaAsyncFunction/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfraStack/LambdaAsyncFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.15.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "InfraStack/LambdaAsyncFunction/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfraStack/LambdaAsyncFunction/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "events:PutEvents",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":events:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":event-bus/default"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "SuccessHandlerC6894287",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LambdaAsyncFunctionServiceRoleDefaultPolicy94F5C363",
                            "roles": [
                              {
                                "Ref": "LambdaAsyncFunctionServiceRole483E3DFA"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.15.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.15.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "InfraStack/LambdaAsyncFunction/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "InfraStack/LambdaAsyncFunction/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.15.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "InfraStack/LambdaAsyncFunction/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.15.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfraStack/LambdaAsyncFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "6191129d6c8a45337b9f007850bf855780466334903a0d0d09251a25770ee9a9.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaAsyncFunctionServiceRole483E3DFA",
                        "Arn"
                      ]
                    },
                    "functionName": "lambda-async-dev",
                    "handler": "async_handler.handler",
                    "runtime": "python3.8",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.15.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.15.0"
            }
          },
          "EventInvokeLambda": {
            "id": "EventInvokeLambda",
            "path": "InfraStack/EventInvokeLambda",
            "children": {
              "Failure": {
                "id": "Failure",
                "path": "InfraStack/EventInvokeLambda/Failure",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfraStack/EventInvokeLambda/Failure/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                      "aws:cdk:cloudformation:props": {
                        "eventPattern": {
                          "detail-type": [
                            "Lambda Function Invocation Result - Failure"
                          ],
                          "resources": [
                            {
                              "Fn::Join": [
                                "",
                                [
                                  {
                                    "Fn::GetAtt": [
                                      "LambdaAsyncFunction053941E6",
                                      "Arn"
                                    ]
                                  },
                                  ":$LATEST"
                                ]
                              ]
                            }
                          ],
                          "source": [
                            "lambda"
                          ]
                        },
                        "state": "ENABLED",
                        "targets": [
                          {
                            "id": "Target0",
                            "arn": {
                              "Fn::GetAtt": [
                                "SuccessHandlerC6894287",
                                "Arn"
                              ]
                            },
                            "inputPath": "$.detail.responsePayload"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_events.CfnRule",
                      "version": "2.15.0"
                    }
                  },
                  "AllowEventRuleInfraStackSuccessHandler98726F76": {
                    "id": "AllowEventRuleInfraStackSuccessHandler98726F76",
                    "path": "InfraStack/EventInvokeLambda/Failure/AllowEventRuleInfraStackSuccessHandler98726F76",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "SuccessHandlerC6894287",
                            "Arn"
                          ]
                        },
                        "principal": "events.amazonaws.com",
                        "sourceArn": {
                          "Fn::GetAtt": [
                            "EventInvokeLambdaFailure184DB469",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.Rule",
                  "version": "2.15.0"
                }
              },
              "DefaultEventBus": {
                "id": "DefaultEventBus",
                "path": "InfraStack/EventInvokeLambda/DefaultEventBus",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.15.0"
                }
              },
              "Success": {
                "id": "Success",
                "path": "InfraStack/EventInvokeLambda/Success",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfraStack/EventInvokeLambda/Success/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                      "aws:cdk:cloudformation:props": {
                        "eventPattern": {
                          "detail-type": [
                            "Lambda Function Invocation Result - Success"
                          ],
                          "resources": [
                            {
                              "Fn::Join": [
                                "",
                                [
                                  {
                                    "Fn::GetAtt": [
                                      "LambdaAsyncFunction053941E6",
                                      "Arn"
                                    ]
                                  },
                                  ":$LATEST"
                                ]
                              ]
                            }
                          ],
                          "source": [
                            "lambda"
                          ]
                        },
                        "state": "ENABLED",
                        "targets": [
                          {
                            "id": "Target0",
                            "arn": {
                              "Fn::GetAtt": [
                                "SuccessHandlerC6894287",
                                "Arn"
                              ]
                            },
                            "inputPath": "$.detail.responsePayload"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_events.CfnRule",
                      "version": "2.15.0"
                    }
                  },
                  "AllowEventRuleInfraStackSuccessHandler98726F76": {
                    "id": "AllowEventRuleInfraStackSuccessHandler98726F76",
                    "path": "InfraStack/EventInvokeLambda/Success/AllowEventRuleInfraStackSuccessHandler98726F76",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "SuccessHandlerC6894287",
                            "Arn"
                          ]
                        },
                        "principal": "events.amazonaws.com",
                        "sourceArn": {
                          "Fn::GetAtt": [
                            "EventInvokeLambdaSuccessDFFBC020",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.Rule",
                  "version": "2.15.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "InfraStack/EventInvokeLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                  "aws:cdk:cloudformation:props": {
                    "functionName": {
                      "Ref": "LambdaAsyncFunction053941E6"
                    },
                    "qualifier": "$LATEST",
                    "destinationConfig": {
                      "onFailure": {
                        "destination": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":events:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":event-bus/default"
                            ]
                          ]
                        }
                      },
                      "onSuccess": {
                        "destination": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":events:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":event-bus/default"
                            ]
                          ]
                        }
                      }
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnEventInvokeConfig",
                  "version": "2.15.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.EventInvokeConfig",
              "version": "2.15.0"
            }
          },
          "lambda_api": {
            "id": "lambda_api",
            "path": "InfraStack/lambda_api",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InfraStack/lambda_api/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "lambda-async-dev_api"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.15.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "InfraStack/lambda_api/CloudWatchRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfraStack/lambda_api/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.15.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "InfraStack/lambda_api/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "lambdaapiCloudWatchRole0459F11F",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.15.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "InfraStack/lambda_api/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfraStack/lambda_api/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "lambdaapi40841C60"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.15.0"
                }
              },
              "DeploymentStage.api_stage_async": {
                "id": "DeploymentStage.api_stage_async",
                "path": "InfraStack/lambda_api/DeploymentStage.api_stage_async",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InfraStack/lambda_api/DeploymentStage.api_stage_async/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "lambdaapi40841C60"
                        },
                        "deploymentId": {
                          "Ref": "lambdaapiDeployment77E502E604880aefa518e6d1c2819ef5cab3b153"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "INFO",
                            "throttlingBurstLimit": 100,
                            "throttlingRateLimit": 10
                          }
                        ],
                        "stageName": "api_stage_async"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.15.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "InfraStack/lambda_api/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.15.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "InfraStack/lambda_api/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "InfraStack/lambda_api/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "InfraStack/lambda_api/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "lambdaapi40841C60",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "lambdaapi40841C60"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*'",
                                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Access-Control-Allow-Methods": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.15.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.15.0"
                    }
                  },
                  "POST": {
                    "id": "POST",
                    "path": "InfraStack/lambda_api/Default/POST",
                    "children": {
                      "ApiPermission.InfraStacklambdaapiD64DE791.POST..": {
                        "id": "ApiPermission.InfraStacklambdaapiD64DE791.POST..",
                        "path": "InfraStack/lambda_api/Default/POST/ApiPermission.InfraStacklambdaapiD64DE791.POST..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "LambdaAsyncFunction053941E6",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":",
                                  {
                                    "Ref": "lambdaapi40841C60"
                                  },
                                  "/",
                                  {
                                    "Ref": "lambdaapiDeploymentStageapistageasync8DACFEB6"
                                  },
                                  "/POST/"
                                ]
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.15.0"
                        }
                      },
                      "ApiPermission.Test.InfraStacklambdaapiD64DE791.POST..": {
                        "id": "ApiPermission.Test.InfraStacklambdaapiD64DE791.POST..",
                        "path": "InfraStack/lambda_api/Default/POST/ApiPermission.Test.InfraStacklambdaapiD64DE791.POST..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "LambdaAsyncFunction053941E6",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":",
                                  {
                                    "Ref": "lambdaapi40841C60"
                                  },
                                  "/test-invoke-stage/POST/"
                                ]
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.15.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "InfraStack/lambda_api/Default/POST/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "POST",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "lambdaapi40841C60",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "lambdaapi40841C60"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "AWS",
                              "uri": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":apigateway:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":lambda:path/2015-03-31/functions/",
                                    {
                                      "Fn::GetAtt": [
                                        "LambdaAsyncFunction053941E6",
                                        "Arn"
                                      ]
                                    },
                                    "/invocations"
                                  ]
                                ]
                              },
                              "integrationHttpMethod": "POST",
                              "requestParameters": {
                                "integration.request.header.X-Amz-Invocation-Type": "method.request.path.InvocationType"
                              },
                              "requestTemplates": {
                                "application/json": "{ \"statusCode\": \"200\"}"
                              },
                              "passthroughBehavior": "WHEN_NO_TEMPLATES",
                              "integrationResponses": [
                                {
                                  "statusCode": "200",
                                  "responseParameters": {},
                                  "responseTemplates": {
                                    "application/json": "{\n        \"api_stage\": \"$context.stage\",\n        \"api_request_id\": \"$context.requestId\",\n        \"api_resource_path\": \"$context.resourcePath\",\n        \"http_method\": \"$context.httpMethod\",\n        \"source_ip\": \"$context.identity.sourceIp\",\n        \"user-agent\": \"$context.identity.userAgent\",\n        #foreach($param in $input.params().header.keySet())\n        #if($param == \"invocationtype\" or $param == \"InvocationType\" && $util.escapeJavaScript($input.params().header.get($param)) == \"Event\")\n        #set($is_async = \"true\")\n        #end\n        #end\n        #if($is_async == \"true\")\n        \"asynchronous_invocation\":\"true\",\n        \"message\":\"Event received. Check queue/logs for status\"\n        #else\n        \"synchronous_invocation\":\"true\",\n        #end\n        }\n        "
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "200",
                                "responseParameters": {
                                  "method.response.header.Content-Length": true
                                },
                                "responseModels": {
                                  "application/json": "Empty"
                                }
                              }
                            ],
                            "requestParameters": {
                              "method.request.header.InvocationType": true
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.15.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.15.0"
                    }
                  },
                  "GET": {
                    "id": "GET",
                    "path": "InfraStack/lambda_api/Default/GET",
                    "children": {
                      "ApiPermission.InfraStacklambdaapiD64DE791.GET..": {
                        "id": "ApiPermission.InfraStacklambdaapiD64DE791.GET..",
                        "path": "InfraStack/lambda_api/Default/GET/ApiPermission.InfraStacklambdaapiD64DE791.GET..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "LambdaAsyncFunction053941E6",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":",
                                  {
                                    "Ref": "lambdaapi40841C60"
                                  },
                                  "/",
                                  {
                                    "Ref": "lambdaapiDeploymentStageapistageasync8DACFEB6"
                                  },
                                  "/GET/"
                                ]
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.15.0"
                        }
                      },
                      "ApiPermission.Test.InfraStacklambdaapiD64DE791.GET..": {
                        "id": "ApiPermission.Test.InfraStacklambdaapiD64DE791.GET..",
                        "path": "InfraStack/lambda_api/Default/GET/ApiPermission.Test.InfraStacklambdaapiD64DE791.GET..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "LambdaAsyncFunction053941E6",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":",
                                  {
                                    "Ref": "lambdaapi40841C60"
                                  },
                                  "/test-invoke-stage/GET/"
                                ]
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.15.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "InfraStack/lambda_api/Default/GET/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "GET",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "lambdaapi40841C60",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "lambdaapi40841C60"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "AWS",
                              "uri": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":apigateway:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":lambda:path/2015-03-31/functions/",
                                    {
                                      "Fn::GetAtt": [
                                        "LambdaAsyncFunction053941E6",
                                        "Arn"
                                      ]
                                    },
                                    "/invocations"
                                  ]
                                ]
                              },
                              "integrationHttpMethod": "POST",
                              "requestParameters": {
                                "integration.request.header.X-Amz-Invocation-Type": "method.request.path.InvocationType"
                              },
                              "requestTemplates": {
                                "application/json": "{ \"statusCode\": \"200\"}"
                              },
                              "passthroughBehavior": "WHEN_NO_TEMPLATES",
                              "integrationResponses": [
                                {
                                  "statusCode": "200",
                                  "responseParameters": {},
                                  "responseTemplates": {
                                    "application/json": "{\n        \"api_stage\": \"$context.stage\",\n        \"api_request_id\": \"$context.requestId\",\n        \"api_resource_path\": \"$context.resourcePath\",\n        \"http_method\": \"$context.httpMethod\",\n        \"source_ip\": \"$context.identity.sourceIp\",\n        \"user-agent\": \"$context.identity.userAgent\",\n        #foreach($param in $input.params().header.keySet())\n        #if($param == \"invocationtype\" or $param == \"InvocationType\" && $util.escapeJavaScript($input.params().header.get($param)) == \"Event\")\n        #set($is_async = \"true\")\n        #end\n        #end\n        #if($is_async == \"true\")\n        \"asynchronous_invocation\":\"true\",\n        \"message\":\"Event received. Check queue/logs for status\"\n        #else\n        \"synchronous_invocation\":\"true\",\n        #end\n        }\n        "
                                  }
                                }
                              ]
                            },
                            "requestParameters": {
                              "method.request.header.InvocationType": true
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.15.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.15.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.15.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.15.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "InfraStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "InfraStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.15.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "InfraStack/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.15.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.1.6"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.15.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.15.0"
    }
  }
}